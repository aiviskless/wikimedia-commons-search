{"version":3,"sources":["consts.js","components/MediaBox.jsx","utils/SPARQLQueryDispatcher.js","components/SearchResultOption.jsx","components/MediaLimitSlider.jsx","components/SearchSettings.jsx","components/Input.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["MAX_MEDIA_LIMIT","NOT_IMAGE_ENCODINGS","getImageFilenameFromWDCFilePath","url","splitUrl","split","getFullsizeImage","length","formatDesc","desc","substr","useStyles","makeStyles","root","height","margin","isMobile","padding","title","maxWidth","wordBreak","fontSize","media","objectFit","cursor","MediaBox","data","thumb","fileLabel","file","encoding","fileOrig","itemLabel","onClick","classes","Card","className","includes","value","controls","width","alt","effect","src","CardContent","Typography","gutterBottom","color","CardActions","Button","size","href","target","SPARQLQueryDispatcher","endpoint","this","sparqlQuery","fullUrl","encodeURIComponent","fetch","headers","Accept","then","body","json","SearchResultOption","option","Box","display","flexDirection","label","variant","description","input","MediaLimitSlider","mediaLimit","setMediaLimit","id","Grid","container","spacing","alignItems","item","xs","Slider","onChange","event","newValue","aria-labelledby","min","max","step","Number","inputProps","type","popoverContent","sliderWrapper","marginTop","SearchSettings","setIncludeSubclassSearch","includeSubclassSearch","useState","anchorEl","setAnchorEl","open","Boolean","undefined","IconButton","aria-describedby","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","FormControlLabel","checked","control","Checkbox","labelPlacement","wdk","WBK","instance","sparqlEndpoint","autocomplete","searchSettingsWrapper","marginRight","Input","setNoResults","setEntityMediaResults","setResultsLoading","loading","setLoading","setValue","inputValue","setInputValue","inputSearchResults","setInputSearchResults","timer","useRef","useEffect","newEntityMediaResults","queryDispatcher","query","concat","results","bindings","current","clearTimeout","setTimeout","searchEntities","response","search","Autocomplete","clearOnBlur","autoHighlight","options","renderOption","getOptionSelected","getOptionLabel","filterOptions","x","onInputChange","newInputValue","renderInput","params","TextField","InputProps","endAdornment","CircularProgress","inputWrapper","marginBottom","loadingWrapper","position","top","count","App","entityMediaResults","noResults","selectedImage","setSelectedImage","console","log","flexWrap","justifyContent","Children","toArray","map","result","large","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.cd4ab41b.chunk.js","sourcesContent":["export const TIMEOUT_FOR_SEARCH = 500;\r\nexport const DEFAULT_MEDIA_LIMIT = 1000;\r\nexport const MAX_MEDIA_LIMIT = 1500;\r\nexport const WCQS_ENDPOINT = 'https://wcqs-beta.wmflabs.org/sparql';\r\n\r\nexport const NOT_IMAGE_ENCODINGS = [\r\n  'video/webm',\r\n  'video/mpeg',\r\n  'audio/wav',\r\n  'audio/x-flac',\r\n  'audio/mpeg',\r\n  'audio/midi',\r\n  'audio/webm',\r\n  'application/ogg',\r\n];\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport { isMobile } from 'react-device-detect';\r\nimport ReactPlayer from 'react-player';\r\nimport { NOT_IMAGE_ENCODINGS } from '../consts';\r\n\r\nconst getFullsizeImage = (url) => url.split('?width')[0];\r\n\r\nconst getImageFilenameFromWDCFilePath = (url) => {\r\n  const splitUrl = url.split('/');\r\n\r\n  return getFullsizeImage(splitUrl[splitUrl.length - 1]);\r\n};\r\n\r\nconst formatTitle = (title) => {\r\n  if (title.length > 50) return `${title.substr(0, 50)}...`;\r\n  return title;\r\n};\r\n\r\nconst formatDesc = (desc) => {\r\n  if (desc.length > 150) return `${desc.substr(0, 50)}...`;\r\n  return desc;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: 'fit-content',\r\n    margin: isMobile ? 8 : 16,\r\n\r\n    '& .MuiCardContent-root': {\r\n      padding: 8,\r\n    },\r\n\r\n    '& .MuiCardActions-root': {\r\n      padding: 4,\r\n    },\r\n  },\r\n\r\n  title: {\r\n    maxWidth: 'fit-content',\r\n    wordBreak: 'break-all',\r\n    fontSize: isMobile ? 12 : 14,\r\n  },\r\n\r\n  media: {\r\n    '& img': {\r\n      objectFit: 'cover !important',\r\n    },\r\n\r\n    '& img:hover': {\r\n      cursor: 'zoom-in !important',\r\n    },\r\n  },\r\n\r\n  desc: {\r\n    maxWidth: 'fit-content',\r\n    fontSize: isMobile ? 10 : 12,\r\n  },\r\n});\r\n\r\nconst MediaBox = ({\r\n  data: {\r\n    thumb, fileLabel, file, encoding, fileOrig, itemLabel,\r\n  },\r\n  onClick = () => {},\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.media}>\r\n        {NOT_IMAGE_ENCODINGS.includes(encoding.value) ? (\r\n          <ReactPlayer\r\n            controls\r\n            url={fileOrig.value}\r\n            height={isMobile ? 94 : 169}\r\n            width={isMobile ? 125 : 225}\r\n          />\r\n        ) : (\r\n          <LazyLoadImage\r\n            onClick={onClick}\r\n            alt={file.value}\r\n            effect=\"blur\"\r\n            src={thumb.value}\r\n            height={isMobile ? 94 : 169}\r\n            width={isMobile ? 125 : 225}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <CardContent>\r\n        <Typography className={classes.title} gutterBottom>\r\n          {formatTitle(getImageFilenameFromWDCFilePath(fileOrig.value))}\r\n        </Typography>\r\n\r\n        {fileLabel?.['xml:lang'] ? (\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            className={classes.desc}\r\n          >\r\n            {formatDesc(fileLabel.value)}\r\n          </Typography>\r\n        )\r\n          // show Wikidata item description if file description unavailable\r\n          : itemLabel?.value && (\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              className={classes.desc}\r\n            >\r\n              {formatDesc(itemLabel.value)}\r\n            </Typography>\r\n          )}\r\n      </CardContent>\r\n\r\n      <CardActions>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          href={file.value}\r\n          target=\"_blank\"\r\n        >\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MediaBox;\r\n","class SPARQLQueryDispatcher {\r\n  constructor(endpoint) {\r\n    this.endpoint = endpoint;\r\n  }\r\n\r\n  query(sparqlQuery) {\r\n    const fullUrl = `${this.endpoint}?query=${encodeURIComponent(sparqlQuery)}`;\r\n    const headers = { Accept: 'application/sparql-results+json' };\r\n\r\n    return fetch(fullUrl, { headers }).then((body) => body.json());\r\n  }\r\n}\r\n\r\nexport default SPARQLQueryDispatcher;\r\n","import { Box, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst SearchResultOption = ({ onClick, option }) => (\r\n  <Box display=\"flex\" flexDirection=\"column\" onClick={onClick}>\r\n    <Typography>{option.label}</Typography>\r\n    <Typography variant=\"caption\">{option.description}</Typography>\r\n  </Box>\r\n);\r\n\r\nexport default SearchResultOption;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\nimport { MAX_MEDIA_LIMIT } from '../consts';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n  },\r\n  input: {\r\n    width: 50,\r\n  },\r\n});\r\n\r\nconst MediaLimitSlider = ({ mediaLimit, setMediaLimit }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    if (newValue > MAX_MEDIA_LIMIT) return false;\r\n    return setMediaLimit(newValue);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    if (Number(event.target.value) > MAX_MEDIA_LIMIT) return false;\r\n    return setMediaLimit(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"input-slider\" gutterBottom>\r\n        Media limit\r\n      </Typography>\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item xs>\r\n          <Slider\r\n            value={typeof mediaLimit === 'number' ? mediaLimit : 0}\r\n            onChange={handleSliderChange}\r\n            aria-labelledby=\"input-slider\"\r\n            color=\"secondary\"\r\n            min={10}\r\n            max={MAX_MEDIA_LIMIT}\r\n            step={10}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Input\r\n            className={classes.input}\r\n            value={mediaLimit}\r\n            margin=\"dense\"\r\n            onChange={handleInputChange}\r\n            inputProps={{\r\n              step: 10,\r\n              min: 10,\r\n              max: MAX_MEDIA_LIMIT,\r\n              type: 'number',\r\n              'aria-labelledby': 'input-slider',\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MediaLimitSlider;\r\n","import React, { useState } from 'react';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport {\r\n  Checkbox, FormControlLabel, IconButton, makeStyles, Popover,\r\n} from '@material-ui/core';\r\nimport MediaLimitSlider from './MediaLimitSlider';\r\n\r\nconst useStyles = makeStyles({\r\n  popoverContent: {\r\n    padding: '8px 16px',\r\n\r\n    '& .MuiFormControlLabel-labelPlacementStart': {\r\n      margin: 0,\r\n    },\r\n  },\r\n\r\n  sliderWrapper: {\r\n    marginTop: 16,\r\n  },\r\n});\r\n\r\nconst SearchSettings = ({\r\n  setIncludeSubclassSearch,\r\n  includeSubclassSearch,\r\n  setMediaLimit,\r\n  mediaLimit,\r\n}) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setIncludeSubclassSearch(event.target.checked);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        size=\"small\"\r\n        aria-describedby={id}\r\n        onClick={handleClick}\r\n      >\r\n        <SettingsIcon />\r\n      </IconButton>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <div className={classes.popoverContent}>\r\n          <FormControlLabel\r\n            value=\"start\"\r\n            checked={includeSubclassSearch}\r\n            onChange={handleChange}\r\n            control={<Checkbox size=\"small\" />}\r\n            label=\"Include subclass search\"\r\n            labelPlacement=\"start\"\r\n          />\r\n\r\n          <div className={classes.sliderWrapper}>\r\n            <MediaLimitSlider\r\n              setMediaLimit={setMediaLimit}\r\n              mediaLimit={mediaLimit}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Popover>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default SearchSettings;\r\n","import React, {\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport WBK from 'wikibase-sdk';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n  CircularProgress, makeStyles,\r\n} from '@material-ui/core';\r\nimport { isMobile } from 'react-device-detect';\r\nimport SPARQLQueryDispatcher from '../utils/SPARQLQueryDispatcher';\r\nimport SearchResultOption from './SearchResultOption';\r\nimport {\r\n  DEFAULT_MEDIA_LIMIT, TIMEOUT_FOR_SEARCH, WCQS_ENDPOINT,\r\n} from '../consts';\r\nimport SearchSettings from './SearchSettings';\r\n\r\nconst wdk = WBK({\r\n  instance: 'https://www.wikidata.org',\r\n  sparqlEndpoint: 'https://query.wikidata.org/sparql',\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 500,\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  autocomplete: {\r\n    width: '100%',\r\n  },\r\n\r\n  searchSettingsWrapper: {\r\n    marginRight: 8,\r\n  },\r\n});\r\n\r\nconst Input = ({ setNoResults, setEntityMediaResults, setResultsLoading }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [value, setValue] = useState(null);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [inputSearchResults, setInputSearchResults] = useState([]);\r\n\r\n  // settings\r\n  const [includeSubclassSearch, setIncludeSubclassSearch] = useState(true);\r\n  const [mediaLimit, setMediaLimit] = useState(DEFAULT_MEDIA_LIMIT);\r\n\r\n  const timer = useRef(null);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleOnValueChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  // useEffect for Commons search\r\n  useEffect(() => {\r\n    if (!value) return false;\r\n\r\n    setEntityMediaResults([]);\r\n    setResultsLoading(true);\r\n    let newEntityMediaResults = [];\r\n\r\n    // define first query\r\n    let sparqlQuery = `\r\n      SELECT ?file ?thumb ?fileOrig ?fileLabel ?encoding WHERE {\r\n        ?file wdt:P180 wd:${value.id} .\r\n        ?file schema:contentUrl ?url .\r\n        ?file schema:encodingFormat ?encoding .\r\n        SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\r\n        bind(iri(concat(\"http://commons.wikimedia.org/wiki/Special:FilePath/\", wikibase:decodeUri(substr(str(?url),53)), \"?width=${isMobile ? 100 : 200}\")) AS ?thumb)\r\n        bind(iri(concat(\"http://commons.wikimedia.org/wiki/Special:FilePath/\", wikibase:decodeUri(substr(str(?url),53)))) AS ?fileOrig)\r\n      } limit ${mediaLimit}\r\n    `;\r\n\r\n    const queryDispatcher = new SPARQLQueryDispatcher(WCQS_ENDPOINT);\r\n\r\n    queryDispatcher.query(sparqlQuery).then((data) => {\r\n      newEntityMediaResults = newEntityMediaResults.concat(data.results.bindings);\r\n      setNoResults(false);\r\n\r\n      setEntityMediaResults([...newEntityMediaResults]);\r\n\r\n      if (!includeSubclassSearch) {\r\n        if (newEntityMediaResults.length === 0) setNoResults(true);\r\n        setResultsLoading(false);\r\n        return true;\r\n      }\r\n\r\n      if (newEntityMediaResults.length > 0) setResultsLoading(false);\r\n\r\n      // define query that searches for subclasses as well\r\n      sparqlQuery = `\r\n        SELECT DISTINCT ?item ?itemLabel ?image ?file ?thumb ?fileOrig ?fileLabel ?encoding\r\n        WITH \r\n        { SELECT ?item ?itemLabel WHERE\r\n          { SERVICE <https://query.wikidata.org/sparql> \r\n            { ?item wdt:P31/wdt:P279* wd:${value.id} .\r\n              SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?item rdfs:label ?itemLabel .}\r\n            }\r\n          }\r\n        } AS %Wikidataitems\r\n  \r\n        WHERE {\r\n          INCLUDE %Wikidataitems .\r\n          ?file wdt:P180 ?item.\r\n          ?file schema:contentUrl ?url .\r\n          ?file schema:encodingFormat ?encoding .\r\n          SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\r\n          bind(iri(concat(\"http://commons.wikimedia.org/wiki/Special:FilePath/\", wikibase:decodeUri(substr(str(?url),53)), \"?width=${isMobile ? 100 : 200}\")) AS ?thumb)\r\n          bind(iri(concat(\"http://commons.wikimedia.org/wiki/Special:FilePath/\", wikibase:decodeUri(substr(str(?url),53)))) AS ?fileOrig)\r\n        } limit ${mediaLimit}\r\n      `;\r\n\r\n      // eslint-disable-next-line no-shadow\r\n      queryDispatcher.query(sparqlQuery).then((data) => {\r\n        newEntityMediaResults = newEntityMediaResults.concat(data.results.bindings);\r\n        setEntityMediaResults([...newEntityMediaResults]);\r\n        if (newEntityMediaResults.length === 0) setNoResults(true);\r\n        setResultsLoading(false);\r\n      });\r\n\r\n      return true;\r\n    });\r\n\r\n    return true;\r\n  }, [includeSubclassSearch, value]);\r\n\r\n  // useEffect for input change and Wikidata search\r\n  useEffect(() => {\r\n    if (inputValue === '') {\r\n      setNoResults(false);\r\n      return undefined;\r\n    }\r\n\r\n    if (timer.current) {\r\n      clearTimeout(timer.current);\r\n    }\r\n\r\n    timer.current = setTimeout(() => {\r\n      setLoading(true);\r\n      const url = wdk.searchEntities(inputValue);\r\n      fetch(url)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setInputSearchResults(data.search);\r\n          setLoading(false);\r\n        });\r\n    }, TIMEOUT_FOR_SEARCH);\r\n\r\n    return true;\r\n  }, [inputValue, setNoResults]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.searchSettingsWrapper}>\r\n        <SearchSettings\r\n          setIncludeSubclassSearch={setIncludeSubclassSearch}\r\n          includeSubclassSearch={includeSubclassSearch}\r\n          setMediaLimit={setMediaLimit}\r\n          mediaLimit={mediaLimit}\r\n        />\r\n      </div>\r\n\r\n      <Autocomplete\r\n        clearOnBlur={false}\r\n        autoHighlight\r\n        options={inputSearchResults}\r\n        renderOption={(option) => <SearchResultOption option={option} />}\r\n        // eslint-disable-next-line no-shadow\r\n        getOptionSelected={(option, value) => option.title === value.title}\r\n        getOptionLabel={(option) => option.label}\r\n        loading={loading}\r\n        filterOptions={(x) => x}\r\n        value={value}\r\n        size=\"small\"\r\n        onChange={handleOnValueChange}\r\n        onInputChange={(event, newInputValue) => {\r\n          setInputValue(newInputValue);\r\n        }}\r\n        className={classes.autocomplete}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Search Commons...\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              endAdornment: (\r\n                <>\r\n                  {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                  {inputSearchResults.length > 0 ? params.InputProps.endAdornment : null}\r\n                </>\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Children, useState } from 'react';\r\nimport {\r\n  Box, CircularProgress, makeStyles, Typography,\r\n} from '@material-ui/core';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { Lightbox } from 'react-modal-image';\r\nimport MediaBox from './components/MediaBox';\r\nimport Input from './components/Input';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: isMobile ? '20px 10px' : '25px 50px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  inputWrapper: {\r\n    marginBottom: 8,\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  loadingWrapper: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n  },\r\n\r\n  count: {\r\n    marginTop: 8,\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const [entityMediaResults, setEntityMediaResults] = useState([]);\r\n  const [noResults, setNoResults] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const closeLightbox = () => {\r\n    setSelectedImage(false);\r\n  };\r\n\r\n  console.log(entityMediaResults, 'entityMediaResults');\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.inputWrapper}>\r\n        <Input\r\n          setNoResults={setNoResults}\r\n          setEntityMediaResults={setEntityMediaResults}\r\n          setResultsLoading={setLoading}\r\n        />\r\n        {entityMediaResults.length > 0 && (\r\n          <small className={classes.count}>{`${entityMediaResults.length} results`}</small>\r\n        )}\r\n      </div>\r\n\r\n      {loading && (\r\n        <div className={classes.loadingWrapper}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n\r\n      {entityMediaResults.length > 0 && (\r\n        <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\">\r\n          {Children.toArray(entityMediaResults.map((result) => (\r\n            <MediaBox data={result} onClick={() => setSelectedImage(result)} />\r\n          )))}\r\n        </Box>\r\n      )}\r\n\r\n      {noResults && <Typography>No results...</Typography>}\r\n\r\n      {selectedImage && (\r\n        <Lightbox\r\n          large={selectedImage.fileOrig.value}\r\n          alt={selectedImage.file.value}\r\n          onClose={closeLightbox}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}